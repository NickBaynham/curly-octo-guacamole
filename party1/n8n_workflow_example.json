{
  "name": "MPC Party1 Integration",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "GET",
        "url": "http://localhost:8003/n8n/tools"
      },
      "id": "get-tools",
      "name": "Get Available Tools",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [240, 300]
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "url": "http://localhost:8003/mcp/tools/compute_mpc",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "operation",
              "value": "add"
            },
            {
              "name": "values",
              "value": "={{ $json.values || [1, 2, 3, 4, 5] }}"
            }
          ]
        }
      },
      "id": "compute-mpc",
      "name": "Compute MPC",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [460, 300]
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "url": "http://localhost:8003/mcp/tools/get_party_data",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "data_type",
              "value": "financial"
            },
            {
              "name": "format",
              "value": "json"
            }
          ]
        }
      },
      "id": "get-party-data",
      "name": "Get Party1 Data",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [680, 300]
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "url": "http://localhost:8003/mcp/tools/validate_input",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "data",
              "value": "={{ $json.values || [10, 20, 30, 40, 50] }}"
            },
            {
              "name": "constraints",
              "value": "={{ { \"min_value\": 0, \"max_value\": 100 } }}"
            }
          ]
        }
      },
      "id": "validate-input",
      "name": "Validate Input",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [900, 300]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "validation-check",
              "leftValue": "={{ $json.is_valid }}",
              "rightValue": true,
              "operator": {
                "type": "boolean",
                "operation": "equal"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "check-validation",
      "name": "Check Validation",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [1120, 300]
    },
    {
      "parameters": {
        "jsCode": "// Combine all results\nreturn {\n  json: {\n    mpc_result: $('Compute MPC').first().json,\n    party_data: $('Get Party1 Data').first().json,\n    validation: $('Validate Input').first().json,\n    workflow_status: 'completed'\n  }\n}"
      },
      "id": "combine-results",
      "name": "Combine Results",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [1340, 300]
    },
    {
      "parameters": {
        "jsCode": "// Handle validation errors\nreturn {\n  json: {\n    error: 'Input validation failed',\n    validation_errors: $('Validate Input').first().json.errors,\n    workflow_status: 'failed'\n  }\n}"
      },
      "id": "handle-errors",
      "name": "Handle Errors",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [1340, 500]
    }
  ],
  "connections": {
    "Get Available Tools": {
      "main": [
        [
          {
            "node": "Compute MPC",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Compute MPC": {
      "main": [
        [
          {
            "node": "Get Party1 Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Party1 Data": {
      "main": [
        [
          {
            "node": "Validate Input",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Validate Input": {
      "main": [
        [
          {
            "node": "Check Validation",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Validation": {
      "main": [
        [
          {
            "node": "Combine Results",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Handle Errors",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [],
  "triggerCount": 0,
  "updatedAt": "2025-07-30T20:00:00.000Z",
  "versionId": "1"
} 